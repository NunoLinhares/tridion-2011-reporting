//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://tridioncommunity.event.logs", ConfigurationName="IAudit", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
public interface IAudit
{
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tridioncommunity.event.logs/IAudit/WriteEvent")]
    void WriteEvent(object eventData);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tridioncommunity.event.logs/IAudit/WriteEvent")]
    System.Threading.Tasks.Task WriteEventAsync(object eventData);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IAuditChannel : IAudit, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AuditClient : System.ServiceModel.ClientBase<IAudit>, IAudit
{
    
    public AuditClient()
    {
    }
    
    public AuditClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public AuditClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public AuditClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public AuditClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void WriteEvent(object eventData)
    {
        base.Channel.WriteEvent(eventData);
    }
    
    public System.Threading.Tasks.Task WriteEventAsync(object eventData)
    {
        return base.Channel.WriteEventAsync(eventData);
    }
}
